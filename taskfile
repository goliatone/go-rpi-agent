#!/bin/bash

if [ -z ${RPI_USER+x} ]; then 
    RPI_USER=pi
fi

if [ -z ${RPI_HOST+x} ]; then 
    RPI_HOST=raspberry.local
fi

if [ -z ${RPI_UUID+x} ]; then 
    RPI_UUID=$(uuidgen)
fi

function gvm:install {
    echo "go version should be go1.11"
    echo ""
    echo "run following commands"
    echo "gvm pkgset create go-rpi-builder"
    echo "gvm pkgset use go-rpi-builder"
    echo "go mod download"
}

function mac:build {
    mkdir -p ./bin/darwin
    echo "building rpi-agent..."
    go build -o ./bin/darwin/rpi-agent main.go
}

function rpi:build {
    mkdir -p ./bin/arm
    echo "building rpi-agent..."
    env GOOS=linux GOARCH=arm GOARM=5 go build -o ./bin/arm/rpi-agent main.go
}

function rpi:mv {
    echo "update agent..."
    echo "stop rpi-agent service"
    
    local user=${1:-$RPI_USER}
    local host=${2:-$RPI_HOST}

    ssh $user@$host -C "sudo systemctl stop rpi-agent.service"

    #TODO: we prob want to give it a random name to prevent clashes
    echo "move agent tmp directory..."
    scp ./bin/arm/rpi-agent $user@$host:/tmp/rpi-agent
    
    echo "move agent to final destination directory..."
    ssh $user@$host -C "sudo mv /tmp/rpi-agent /usr/local/bin/rpi-agent"

    echo "start rpi-agent service"
    ssh $user@$host -C "sudo systemctl start rpi-agent.service"
}

function release:build {
    mkdir -p ./bin/arm
    
    VERSION=${1:-0.0.1}
    BUILD_DATE=`date -u +%Y%m%d.%H%M%S`
    
    echo "go build ldflags -X main.VERSION=$VERSION -X main.BUILD_DATE=$BUILD_DATE"
    env GOOS=linux GOARCH=arm GOARM=5 go build -ldflags "-X main.VERSION=$VERSION -X main.BUILD_DATE=$BUILD_DATE" -o ./bin/arm/rpi-agent main.go
}

function release:update {
    echo "release upddate..."
    local user=${1:-$RPI_USER}
    local host=${2:-$RPI_HOST}
    local tag=${3:-0.0.1}

    release:build $tag 
    rpi:mv $user $host
    test:service $host
}

function service:install {
    echo "service install..."

    local user=${1:-$RPI_USER}
    local host=${2:-$RPI_HOST}
    local uuid=${3:-$RPI_UUID}
    local tag=${4:-0.0.1}

    release:build $tag

    echo "scp service to $user@$host..."
    scp ./service/rpi-agent.service $user@$host:/tmp/rpi-agent.service

    echo "mv service..."
    ssh $user@$host -C "sudo mv /tmp/rpi-agent.service /etc/systemd/system/rpi-agent.service"

    echo "chmod service..."
    ssh $user@$host -C "sudo chmod 644 /etc/systemd/system/rpi-agent.service"

    echo "mkdir for metadata"
    ssh $user@$host -C "sudo mkdir -p /usr/local/src/rpi-agent/metadata"

    echo "set user $user as metadata owner"
    ssh $user@$host -C "sudo chown -R $user /usr/local/src/rpi-agent/"

    # echo "Create default UUID"
    # ssh $user@$host -C "echo $(cat /proc/sys/kernel/random/uuid) > /usr/local/src/rpi-agent/metadata/.device_uuid"
    
    METADATA="/usr/local/src/rpi-agent/metadata/.device_uuid"
    ssh $user@$host -C "if [ ! -e $METADATA ]; then echo $uuid > ${METADATA}; fi"
    
    rpi:mv $user $host

    test:service $host
}

function test:service {
    local host=${1:-$RPI_HOST}
    curl -s $host:8080 | jq
}

function version:bump {
    echo "TODO :)"
    # https://stackoverflow.com/questions/4485399/how-can-i-bump-a-version-number-using-bash
    # https://gist.github.com/andyexeter/da932c9644d832e3be6706d20d539ff7
}

function help {
    echo "run <task> <args>"
    echo "Tasks:"
    compgen -A function | grep -v '^_' | cat -n
}

TIMEFORMAT="Task completed in %3lR"
time ${@:-help}

