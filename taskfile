#!/bin/bash

function gvm:install {
    echo "go version should be go1.11"
    echo ""
    echo "run following commands"
    echo "gvm pkgset create go-rpi-builder"
    echo "gvm pkgset use go-rpi-builder"
    echo "go mod download"
}

function rpi:build {
    echo "building rpi-agent..."
    env GOOS=linux GOARCH=arm GOARM=5 go build -o ./bin/arm/rpi-agent main.go
}

function rpi:mv {
    echo "update agent..."
    echo "stop rpi-agent service"
    ssh $RPI_USER@$RPI_HOST -C "sudo systemctl stop rpi-agent.service"

    #TODO: we prob want to give it a random name to prevent clashes
    echo "move agent tmp directory..."
    scp ./bin/arm/rpi-agent $RPI_USER@$RPI_HOST:/tmp/rpi-agent
    
    echo "move agent to final destination directory..."
    ssh $RPI_USER@$RPI_HOST -C "sudo mv /tmp/rpi-agent /usr/local/bin/rpi-agent"

    echo "start rpi-agent service"
    ssh $RPI_USER@$RPI_HOST -C "sudo systemctl start rpi-agent.service"
}

if [ -z ${RPI_USER+x} ]; then 
    RPI_USER=pi
fi

if [ -z ${RPI_HOST+x} ]; then 
    RPI_HOST=raspberry.local
fi

if [ -z ${RPI_UUID+x} ]; then 
    RPI_UUID=$(uuidgen)
fi

function release:build {
    BUILD_DATE=`date -u +%Y%m%d.%H%M%S`
    VERSION=${1:-0.0.1}
    echo "go build ldflags -X main.VERSION=$VERSION -X main.BUILD_DATE=$BUILD_DATE"
    env GOOS=linux GOARCH=arm GOARM=5 go build -ldflags "-X main.VERSION=$VERSION -X main.BUILD_DATE=$BUILD_DATE" -o ./bin/arm/rpi-agent main.go
}

function release:update {
    echo "release upddate..."
    release:build $1  
    rpi:mv
}

function publish:jfrog {
    cd ./bin/arm/
    tar -czvf rpi-agent.tar.gz rpi-agent
    cd -

    TAG=${1:0.0.1}
    curl -H "X-JFrog-Art-Api:$ARTIFACTORY_APIKEY" -T ./bin/arm/rpi-agent.tar.gz "${ARTIFACTORY_URL}/rpi-agent.${TAG}.tar.gz"
}

function service:install {
    echo "service install..."

    rpi:build 

    echo "scp service to $RPI_USER@$RPI_HOST..."
    scp ./service/rpi-agent.service $RPI_USER@$RPI_HOST:/tmp/rpi-agent.service

    echo "mv service..."
    ssh $RPI_USER@$RPI_HOST -C "sudo mv /tmp/rpi-agent.service /etc/systemd/system/rpi-agent.service"

    echo "chmod service..."
    ssh $RPI_USER@$RPI_HOST -C "sudo chmod 644 /etc/systemd/system/rpi-agent.service"

    echo "reload systemctl daemon"
    ssh $RPI_USER@$RPI_HOST -C "sudo systemctl daemon-reload"
    
    echo "Enable daemon"
    ssh $RPI_USER@$RPI_HOST -C "sudo systemctl enable rpi-agent"

    echo "mkdir for metadata"
    ssh $RPI_USER@$RPI_HOST -C "sudo mkdir -p /usr/local/src/rpi-agent/metadata"

    echo "set user $RPI_USER as metadata owner"
    ssh $RPI_USER@$RPI_HOST -C "sudo chown -R $RPI_USER /usr/local/src/rpi-agent/"

    echo "Create default UUID"
    # ssh $RPI_USER@$RPI_HOST -C "echo $(cat /proc/sys/kernel/random/uuid) > /usr/local/src/rpi-agent/metadata/.device_uuid"
    
    METADATA="/usr/local/src/rpi-agent/metadata"
    ssh $RPI_USER@$RPI_HOST -C "if [ -s diff.txt ]; then echo $RPI_UUID > ${METADTATA}/.device_uuid ; fi"
    
    rpi:mv
}

function help {
    echo "$0 <task> <args>"
    echo "Tasks:"
    compgen -A function | grep -v '^_' | cat -n
}

TIMEFORMAT="Task completed in %3lR"
time ${@:-help}

